apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Release.Name }}-pihole
  labels:
    app: pihole
spec:
  serviceName: {{ .Values.service.name }}
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: pihole
  template:
    metadata:
      labels:
        app: pihole
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.io/hostname
                  operator: In
                  values:
                    - worker1
                    - worker2
                    - worker3
                    - worker4
                    - worker5
                    - clustermaster
      containers:
        - name: pihole
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          ports:
            - containerPort: 53
              protocol: TCP
            - containerPort: 53
              protocol: UDP
            - containerPort: 67
              protocol: UDP
            - containerPort: 80
              protocol: TCP
            - containerPort: 443
              protocol: TCP
            - containerPort: 5335
              protocol: TCP
          resources:
            requests:
              cpu: "2"
              memory: "4Gi"
            limits:
              cpu: "2"
              memory: "4Gi"
          securityContext:
            capabilities:
              add:
                - NET_ADMIN
          volumeMounts:
            - mountPath: /etc/pihole
              name: pihole-data  # First PVC for Pi-hole data
            - mountPath: /etc/dnsmasq.d
              name: dnsmasq-data  # Second PVC for dnsmasq config
          env:
            - name: DNSMASQ_LISTENING
              value: "single"
            - name: DNSSEC
              value: '"true"'
            - name: FTLCONF_LOCAL_IPV4
              value: "x.x.x.x"
            - name: PIHOLE_DNS_
              value: "127.0.0.1#5335"
            - name: TZ
              value: "US/New_York"
            - name: WEBPASSWORD
              value: "your-password"
      restartPolicy: Always

  volumeClaimTemplates:
    - metadata:
        name: pihole-data  # PVC name for Pi-hole data
      spec:
        accessModes:
          - ReadWriteOnce
        storageClassName: {{ .Values.persistence.storageClassName }}
        resources:
          requests:
            storage: {{ .Values.persistence.size.claim0 }}

    - metadata:
        name: dnsmasq-data  # PVC name for dnsmasq config
      spec:
        accessModes:
          - ReadWriteOnce
        storageClassName: {{ .Values.persistence.storageClassName }}
        resources:
          requests:
            storage: {{ .Values.persistence.size.claim1 }}